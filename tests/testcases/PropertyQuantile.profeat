const max_processes = 5;

family {
    num_processes : [3..max_processes];
}

global q : array [0..num_processes-1] of [0..1];

root feature {
    all of process[num_processes];

    rewards "steps" {
        true : 1;
    }
}

feature process {
    modules process_impl;
}

module process_impl {
    for n in [max(id+1,3)..num_processes] {
        [] num_processes = n & q[id] = 1
            -> 0.5:(q[id]' = 0) & (q[mod(id + 1, n)]' = 1)
             + 0.5:(q[id]' = 0) & (q[mod(id - 1, n)]' = 1);
    }
}

init {
    num_tokens >= 1
}

label "stable" = num_tokens = 1;

formula num_tokens = for i in [0..num_processes-1] { (i < num_processes ? q[i] : 0) + ... };


