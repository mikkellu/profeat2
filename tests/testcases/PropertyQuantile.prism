mdp

init
    (0 < num_processes ? q_0 : 0) + ((1 < num_processes ? q_1 : 0) + ((2 < num_processes ? q_2 : 0) + ((3 < num_processes ? q_3 : 0) + (4 < num_processes ? q_4 : 0)))) >= 1
endinit

formula _active = true;
formula _process_0_active = true;
formula _process_1_active = true;
formula _process_2_active = true;
formula _process_3_active = true;
formula _process_4_active = true;

rewards "steps"
    true : 1;
endrewards

const int max_processes = 5;

global num_processes : [3 .. max_processes];

global q_0 : [0 .. 1];
global q_1 : [0 .. 1];
global q_2 : [0 .. 1];
global q_3 : [0 .. 1];
global q_4 : [0 .. 1];

module _process_0_process_impl
    [] _process_0_active & (num_processes = 3 & q_0 = 1) -> 0.5:(q_0' = 0) & (q_1' = 1) + 0.5:(q_0' = 0) & (q_2' = 1);
    [] _process_0_active & (num_processes = 4 & q_0 = 1) -> 0.5:(q_0' = 0) & (q_1' = 1) + 0.5:(q_0' = 0) & (q_3' = 1);
    [] _process_0_active & (num_processes = 5 & q_0 = 1) -> 0.5:(q_0' = 0) & (q_1' = 1) + 0.5:(q_0' = 0) & (q_4' = 1);
endmodule

module _process_1_process_impl
    [] _process_1_active & (num_processes = 3 & q_1 = 1) -> 0.5:(q_1' = 0) & (q_2' = 1) + 0.5:(q_1' = 0) & (q_0' = 1);
    [] _process_1_active & (num_processes = 4 & q_1 = 1) -> 0.5:(q_1' = 0) & (q_2' = 1) + 0.5:(q_1' = 0) & (q_0' = 1);
    [] _process_1_active & (num_processes = 5 & q_1 = 1) -> 0.5:(q_1' = 0) & (q_2' = 1) + 0.5:(q_1' = 0) & (q_0' = 1);
endmodule

module _process_2_process_impl
    [] _process_2_active & (num_processes = 3 & q_2 = 1) -> 0.5:(q_2' = 0) & (q_0' = 1) + 0.5:(q_2' = 0) & (q_1' = 1);
    [] _process_2_active & (num_processes = 4 & q_2 = 1) -> 0.5:(q_2' = 0) & (q_3' = 1) + 0.5:(q_2' = 0) & (q_1' = 1);
    [] _process_2_active & (num_processes = 5 & q_2 = 1) -> 0.5:(q_2' = 0) & (q_3' = 1) + 0.5:(q_2' = 0) & (q_1' = 1);
endmodule

module _process_3_process_impl
    [] _process_3_active & (num_processes = 4 & q_3 = 1) -> 0.5:(q_3' = 0) & (q_0' = 1) + 0.5:(q_3' = 0) & (q_2' = 1);
    [] _process_3_active & (num_processes = 5 & q_3 = 1) -> 0.5:(q_3' = 0) & (q_4' = 1) + 0.5:(q_3' = 0) & (q_2' = 1);
endmodule

module _process_4_process_impl
    [] _process_4_active & (num_processes = 5 & q_4 = 1) -> 0.5:(q_4' = 0) & (q_0' = 1) + 0.5:(q_4' = 0) & (q_3' = 1);
endmodule

label "stable" = (0 < num_processes ? q_0 : 0) + ((1 < num_processes ? q_1 : 0) + ((2 < num_processes ? q_2 : 0) + ((3 < num_processes ? q_3 : 0) + (4 < num_processes ? q_4 : 0)))) = 1;
