root feature {
    modules root_impl;

    rewards "test" {
        for i in [1..n] {
            [act[i]] true : 1;
        }
    }
}

const int n = 3;

formula add(x, y) = x + y;

const int x = for i in [0..-1] { i * ... };
const int y = for i in [1..n]  { add(i, ...) };
const int z = for i in [1..n]  { min(i, ...) };

module root_impl {
    s    : [1..n] init 1;
    last : array [1..n] of bool init false;

    for i in [1..n-1] {
        [] s = i -> (s' = i + 1);
    }

    [] s = n -> for i in [1..n] {
                    (1/n):(s' = i) & for k in [1..n] {
                        (last[k]' = i = k)
                    }
                };
}

